[project]
name = "android-file-handler-adb"
version = "0.1.0"
description = "An Android file transfer util for Windows and Linux. MacOS support may be added later."
authors = [
    { name = "Jason Ross", email = "51939451+JMR-dev@users.noreply.github.com" },
]
license = { text = "MIT" }
readme = "README.md"
requires-python = "<3.13,>=3.9"
dependencies = ["requests>=2.32.4,<3.0.0"]

[tool.poetry.dependencies]
python = "<3.13,>=3.9"
requests = ">=2.32.4,<3.0.0"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
# Main application entry point
android-file-handler = "src.main:main"

# Development and maintenance scripts
dev = "python src/main.py"
gui = "python src/gui.py"
test-adb = "python -c 'from src.adb_manager import ADBManager; m = ADBManager(); print(f\"ADB Available: {m.check_device()}\")"
clean-adb = "python -c 'import shutil, os; shutil.rmtree(\"src/platform-tools\", ignore_errors=True); print(\"ADB cache cleared\")'"

[tool.poetry.group.dev.dependencies]
black = "^25.0.0"
flake8 = "^6.0.0"
mypy = "^1.5.0"
pre-commit = "^3.4.0"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.0"
pytest-qt = "^4.2.0"
pytest-mock = "^3.11.0"
pytest-cov = "^4.1.0"

[tool.poetry.group.build.dependencies]
pyinstaller = "^5.13.0"

[tool.black]
line-length = 88
target-version = ['py313']

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.poetry]
package-mode = false

[tool.setuptools.packages.find]
where = ["src"] # or wherever your source code lives

[tool.setuptools.package-dir]
"" = "src" # if using src layout
